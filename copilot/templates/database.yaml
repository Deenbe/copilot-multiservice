AWSTemplateFormatVersion: 2010-09-09

Mappings: 
  AccountMap: 
    '264126593162': 
      VpcId: vpc-09c4429329f753e0c
      EnvironmentName: Test
      DatabaseSubnets: subnet-0ad9e870f74801f17, subnet-0ffa2a27c68f0782d, subnet-0b0e529004420cce1
      NotificationEmail: jonesaws@amazon.com
Resources:
  DBNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint: !FindInMap [AccountMap, !Ref AWS::AccountId, NotificationEmail]
        Protocol: email
  AppSecurityGroup: 
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Limited SG for App
      VpcId: !FindInMap [AccountMap, !Ref AWS::AccountId, VpcId]
  MonitoringIAMRole: 
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "monitoring.rds.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
  
  MyRDSInstanceRotationSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Join ['-',[!Ref AWS::StackName,'DbCredentials']]
      Description: Generated Admin RDS Credentials
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: 'password'
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
  DBClusterParameterGroup:
    Type: 'AWS::RDS::DBClusterParameterGroup'
    Properties:
      Description: Aurora Cluster Parameter Group
      Family: aurora-mysql5.7
      Parameters: Australia/Sydney
  DBParamGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: !Join [ "- ", [ "Aurora DB Parameter Group for Cloudformation Stack ", !Ref "AWS::StackName" ] ]
      Family: aurora-mysql5.7
  RDSSubnetGroup: 
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupDescription: Subnet Group for Aurora
      SubnetIds: !Split [",", !FindInMap [AccountMap, !Ref AWS::AccountId, DatabaseSubnets] ]
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !FindInMap [AccountMap, !Ref AWS::AccountId, VpcId]
      GroupDescription: Database Security Group
      SecurityGroupIngress:
        - ToPort: 3306
          FromPort: 3306
          IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt AppSecurityGroup.GroupId
  RDSCluster:
    Type: 'AWS::RDS::DBCluster'
    DeletionPolicy: Delete
    Properties:
      DBClusterParameterGroupName: !Ref DBClusterParameterGroup
      DatabaseName: !Join ['-',[!Ref AWS::StackName,'db']]
      DBSubnetGroupName: !Ref RDSSubnetGroup
      Engine: aurora-mysql
      EngineVersion: 5.7.mysql_aurora.2.09.2
      MasterUsername: !Sub '{{resolve:secretsmanager:${MyRDSInstanceRotationSecret}::username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${MyRDSInstanceRotationSecret}::password}}'
      VpcSecurityGroupIds:
        - !Ref DBSecurityGroup
  RDSMasterInstance:
    Type: 'AWS::RDS::DBInstance'
    DeletionPolicy: Delete
    Properties:
      Engine: aurora-mysql
      DBClusterIdentifier: !Ref RDSCluster
      DBSubnetGroupName: !Ref RDSSubnetGroup
      DBParameterGroupName: default.aurora-mysql5.7
      PubliclyAccessible: True
      DBInstanceClass: db.r5.large
      MonitoringInterval: 1
      MonitoringRoleArn: !GetAtt MonitoringIAMRole.Arn
      AutoMinorVersionUpgrade: true
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
  CPUUtilizationAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - Ref: DBNotificationTopic
      AlarmDescription: 'CPU_Utilization'
      Dimensions:
      - Name: DBInstanceIdentifier
        Value:
          Ref: RDSMasterInstance
      MetricName: CPUUtilization
      Statistic: Maximum
      Namespace: 'AWS/RDS'
      Threshold: 80
      Unit: Percent
      ComparisonOperator: 'GreaterThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  MaxUsedTxIDsAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - Ref: DBNotificationTopic
      AlarmDescription: 'Maximum Used Transaction IDs'
      Dimensions:
      - Name: DBInstanceIdentifier
        Value:
          Ref: RDSMasterInstance
      MetricName: 'MaximumUsedTransactionIDs'
      Statistic: Average
      Namespace: 'AWS/RDS'
      Threshold: 600000000
      Unit: Count
      ComparisonOperator: 'GreaterThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  FreeLocalStorageAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - Ref: DBNotificationTopic
      AlarmDescription: 'Free Local Storage'
      Dimensions:
      - Name: DBInstanceIdentifier
        Value:
          Ref: RDSMasterInstance
      MetricName: 'FreeLocalStorage'
      Statistic: Average
      Namespace: 'AWS/RDS'
      Threshold: 5368709120
      Unit: Bytes
      ComparisonOperator: 'LessThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  DatabaseClusterEventSubscription:
    Type: 'AWS::RDS::EventSubscription'
    Properties:
      EventCategories:
      - failover
      - failure
      - notification
      SnsTopicArn: !Ref DBNotificationTopic
      SourceIds: [!Ref RDSCluster]
      SourceType: 'db-cluster'
  DatabaseInstanceEventSubscription:
    Type: 'AWS::RDS::EventSubscription'
    Properties:
      EventCategories:
      - availability
      - configuration change
      - deletion
      - failover
      - failure
      - maintenance
      - notification
      - read replica
      - recovery
      - restoration
      SnsTopicArn: !Ref DBNotificationTopic
      SourceIds: 
      - !Ref RDSMasterInstance
      SourceType: 'db-instance'
  DBParameterGroupEventSubscription:
    Type: 'AWS::RDS::EventSubscription'
    Properties:
      EventCategories:
      - configuration change
      SnsTopicArn: !Ref DBNotificationTopic
      SourceIds: [!Ref DBParamGroup]
      SourceType: 'db-parameter-group'
  ReaderEndpointParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Cluster Reader Endpoint for the cluster.
      Name: db-reader-endpoint
      Type: String
      Value: !GetAtt RDSCluster.ReadEndpoint.Address
      Tier: Standard
  WriterEndpointParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Cluster Writer Endpoint for the cluster.
      Name: db-writer-endpoint
      Type: String
      Value: !GetAtt RDSCluster.Endpoint.Address
      Tier: Standard
  
Outputs:
  ReaderEndpoint:
    Description: Cluster Reader Endpoint
    Value: !GetAtt RDSCluster.ReadEndpoint.Address
  WriterEndpoint:
    Description: Cluster Writer Endpoint
    Value: !GetAtt RDSCluster.Endpoint.Address
